{"version":3,"sources":["static/audio/bells.wav","App.js","reportWebVitals.js","index.js"],"names":["Timer","num","places","useSound","churchbell","play","useState","timerFinished","setTimerFinished","seconds","setSeconds","isActive","setIsActive","playSound","useEffect","interval","setInterval","s","clearInterval","className","Math","floor","String","padStart","onClick","max","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"8PAAe,G,MAAA,IAA0B,mCCsE1BA,EA/DD,WACZ,IAAiBC,EAAKC,EADJ,EAIHC,YAASC,GAAjBC,EAJW,sBAKwBC,oBAAS,GALjC,mBAKXC,EALW,KAKIC,EALJ,OAMYF,mBAHZ,KAHA,mBAMXG,EANW,KAMFC,EANE,OAOcJ,oBAAS,GAPvB,mBAOXK,EAPW,KAODC,EAPC,KAWZC,EAAY,WAAaN,IAAiBF,IAAQG,GAAiB,KAkBzE,OAhBAM,qBAAU,WACR,IAAIC,EAAW,KAYf,OAXIN,GAAW,IACbG,GAAY,GACZC,KAEEF,EACFI,EAAWC,aAAY,WACrBN,GAAW,SAACO,GAAD,OAAOA,EAAI,OACrB,KACON,GAAwB,IAAZF,GACtBS,cAAcH,GAET,kBAAMG,cAAcH,MAC1B,CAACJ,EAAUF,EAASI,IAGrB,sBAAKM,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAf,SACE,sBAAKA,UAAS,uBAAkBR,EAAW,oBAAsB,IAAjE,UACIS,KAAKC,MAAMZ,EAAU,IADzB,KA/BWR,EAgC6BQ,EAAU,GAhClCP,EAgCsC,EAhC3BoB,OAAOrB,GAAKsB,SAASrB,EAAQ,WAmC1D,sBAAKiB,UAAU,MAAf,UACE,wBAAQA,UAAS,uCAAkCR,EAAW,SAAW,YAAca,QA7B9E,WAAQZ,GAAaD,GAAWH,GAAiB,IA6B1D,SACGG,EACG,cAAC,IAAD,IACA,cAAC,IAAD,MAGN,wBAAQQ,UAAU,wCAAwCK,QAlClD,WAAQd,EANJ,KAM2BE,GAAY,GAAQJ,GAAiB,IAkC5E,SACE,cAAC,IAAD,MAGF,wBAAQW,UAAU,wCAAwCK,QAAS,kBAAMnB,KAAzE,SACE,cAAC,IAAD,MAGF,wBAAQc,UAAU,wCAAwCK,QAAS,kBAAMd,GAAW,SAACO,GAAD,OAAOG,KAAKK,IAAI,EAAGR,EAAI,SAA3G,mBAGA,wBAAQE,UAAU,wCAAwCK,QAAS,kBAAMd,GAAW,SAACO,GAAD,OAAOG,KAAKK,IAAI,EAAKR,EAAI,QAA7G,mBAGA,+BCpDOS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.44c45074.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bells.5e9dbdeb.wav\";","import React, { useEffect, useState } from 'react';\nimport useSound from 'use-sound';\nimport { FaPlay, FaPause, FaUndo, FaMusic } from 'react-icons/fa';\n\nimport './timer.scss';\nimport churchbell from './static/audio/bells.wav';\n\nconst Timer = () => {\n  const zeroPad = (num, places) => String(num).padStart(places, '0');\n\n  const startTime = 300;\n  const [play] = useSound(churchbell);\n  const [timerFinished, setTimerFinished] = useState(false);\n  const [seconds, setSeconds] = useState(startTime);\n  const [isActive, setIsActive] = useState(false);\n  const toggle = () => { setIsActive(!isActive); setTimerFinished(false); };\n  const reset = () => { setSeconds(startTime); setIsActive(false); setTimerFinished(false); };\n\n  const playSound = () => { if (!timerFinished) { play(); setTimerFinished(true); } };\n\n  useEffect(() => {\n    let interval = null;\n    if (seconds <= 0) {\n      setIsActive(false);\n      playSound();\n    }\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds((s) => s - 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds, playSound]);\n\n  return (\n    <div className='app'>\n      <div className='time'>\n        <div className={`timer-circle ${isActive ? 'timer-circle-grow' : ''}`}>\n          {(Math.floor(seconds / 60))}:{zeroPad(seconds % 60, 2)}\n        </div>\n      </div>\n      <div className='row'>\n        <button className={`circle-button button-primary-${isActive ? 'active' : 'inactive'}`} onClick={toggle}>\n          {isActive\n            ? <FaPause />\n            : <FaPlay />}\n          {/* // 'pause' : 'start'} */}\n        </button>\n        <button className='circle-button button-primary-inactive' onClick={reset}>\n          <FaUndo />\n          {/* reset */}\n        </button>\n        <button className='circle-button button-primary-inactive' onClick={() => play()}>\n          <FaMusic />\n          {/* sound */}\n        </button>\n        <button className='circle-button button-primary-inactive' onClick={() => setSeconds((s) => Math.max(0, s + 300))}>\n          +5min\n        </button>\n        <button className='circle-button button-primary-inactive' onClick={() => setSeconds((s) => Math.max(0.0, s - 60))}>\n          -1min\n        </button>\n        <div />\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}